{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/index.js","webpack:///./src/js/utils.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","utils","require","document","addEventListener","displayElem","querySelector","squares","querySelectorAll","resetElem","jumbotron","levelElems","scoreInfoElem","roundInfoElem","helpBtn","rgbimgElem","winningColor","currentRound","GAME_STATUS","ROUND_STATUS","currentRoundStatus","LEVEL","currentLevel","noOfVisibleSquares","totalScore","currentScore","winningId","hide","elem","e","style","backgroundColor","borderColor","unhide","styleBgrAndBorder","color","isFinalRound","processRoundEnd","gameOver","classList","toggle","textContent","add","sqr","styleSquaresWithWinningClr","processClickedSquare","candidate","isWinner","Number","dataset","id","concat","setId","attr","val","addDataAttribute","updateDisplay","remove","getRandomRgbColor","setBgrColorAndIdOnSquares","reset","getRandomInt","processLevelBtns","this","contains","forEach","init","console","log","minInclusive","maxExclusive","Error","minInt","Math","ceil","maxInt","floor","random","red","green","blue","attribute"],"mappings":"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","file":"js/index-ff7a125d52bc45362a1b.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"e6Wu\");\n","/** @format */\nimport \"../css/main.scss\";\n\nconst utils = require(\"./utils.js\");\n/* \nvar require = function(path) {\n   var exports = module.exports = {\n     ....\n   };\n  return module.exports;\n  };\n */\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const colorGame = (() => {\n    const displayElem = document.querySelector(\".rgb-values\");\n    const squares = document.querySelectorAll(\".square\");\n    const resetElem = document.querySelector(\".btn-reset\");\n    const jumbotron = document.querySelector(\".jumbotron\");\n    const levelElems = document.querySelectorAll(\".btn-level\");\n    const scoreInfoElem = document.querySelector(\".info-score\");\n    const roundInfoElem = document.querySelector(\".info-round\");\n    const helpBtn = document.querySelector(\".btn-help\");\n    const rgbimgElem = document.querySelector(\".rgbimg-wrapper\");\n    const borderClr = \"#f8f9fa\";\n    const dark = \"#15151b\";\n    let winningColor = \"\";\n    const ROUNDS_LIMIT = 5;\n    let currentRound = 0;\n    const GAME_STATUS = {\n      over: 0,\n      on: 1,\n    };\n    let currentGameStatus = GAME_STATUS.on;\n    const ROUND_STATUS = {\n      over: 0,\n      on: 1,\n    };\n    let currentRoundStatus = ROUND_STATUS.on;\n    const LEVEL = {\n      easy: 3,\n      hard: 6,\n    };\n    let currentLevel = LEVEL.hard;\n    const noOfColorSquares = 6;\n    let noOfVisibleSquares = 6;\n    let totalScore = LEVEL.hard * ROUNDS_LIMIT;\n    let currentScore = LEVEL.hard * ROUNDS_LIMIT;\n    let winningId = -1;\n\n    const isWinner = candidate => {\n      return winningId === candidate;\n    };\n\n    const hide = elem => {\n      const e = elem;\n      e.style.backgroundColor = dark;\n      e.style.borderColor = dark;\n    };\n\n    const unhide = elem => {\n      const e = elem;\n      e.style.borderColor = \"\";\n    };\n\n    const styleBgrAndBorder = (color, elem) => {\n      const e = elem;\n      e.style.backgroundColor = color;\n      e.style.borderColor = borderClr;\n    };\n\n    const styleSquaresWithWinningClr = () => {\n      for (let i = 0; i < noOfColorSquares; i++) {\n        if (i < noOfVisibleSquares) {\n          const sqr = squares[i];\n          styleBgrAndBorder(winningColor, sqr);\n          unhide(sqr);\n        }\n      }\n    };\n\n    const isFinalRound = () => {\n      return currentRound >= ROUNDS_LIMIT;\n    };\n\n    const updateRoundsCount = () => {\n      if (isFinalRound()) {\n        currentGameStatus = GAME_STATUS.over;\n        currentRound = 1;\n        currentScore = totalScore;\n      } else {\n        currentRound++;\n      }\n    };\n\n    const processRoundEnd = () => {\n      currentRoundStatus = ROUND_STATUS.over;\n      const gameOver = isFinalRound();\n      if (gameOver) {\n        scoreInfoElem.classList.toggle(\"highlight\");\n      }\n      resetElem.textContent = gameOver ? \"new game\" : \"next round\";\n      resetElem.classList.add(\"highlight\");\n      styleSquaresWithWinningClr();\n      styleBgrAndBorder(winningColor, jumbotron);\n    };\n\n    const processClickedSquare = sqr => {\n      if (currentRoundStatus === ROUND_STATUS.over) return;\n\n      if (isWinner(Number(sqr.dataset.id))) {\n        processRoundEnd();\n      } else {\n        hide(sqr);\n        currentScore -= 1;\n      }\n      scoreInfoElem.textContent = `${currentScore} / ${totalScore}`;\n      roundInfoElem.textContent = currentRound;\n    };\n\n    const setId = (elem, attr, val) => {\n      utils.addDataAttribute(elem, attr, val);\n    };\n\n    const setBgrColorAndIdOnSquares = () => {\n      for (let i = 0; i < noOfColorSquares; i++) {\n        if (i < noOfVisibleSquares) {\n          styleBgrAndBorder(utils.getRandomRgbColor(), squares[i]);\n          setId(squares[i], \"id\", i);\n        } else {\n          hide(squares[i]);\n        }\n      }\n    };\n\n    const calculateWinningId = () => {\n      winningId = utils.getRandomInt(0, noOfVisibleSquares);\n    };\n\n    const calculateWinningColor = () => {\n      winningColor = utils.getRandomRgbColor();\n    };\n\n    const addListenersToSquares = () => {\n      squares.forEach(elem => {\n        elem.addEventListener(\"click\", function fn() {\n          processClickedSquare(this);\n        });\n      });\n    };\n\n    const updateDisplay = () => {\n      jumbotron.style.backgroundColor = \"\";\n      resetElem.textContent = isFinalRound() ? \"new game\" : \"new colors\";\n      resetElem.classList.remove(\"highlight\");\n      scoreInfoElem.textContent = `${currentScore} / ${totalScore}`;\n      scoreInfoElem.classList.remove(\"highlight\");\n      roundInfoElem.textContent = currentRound;\n\n      setBgrColorAndIdOnSquares();\n      styleBgrAndBorder(winningColor, squares[winningId]);\n      displayElem.textContent = winningColor;\n    };\n\n    const reset = () => {\n      updateRoundsCount();\n      currentRoundStatus = ROUND_STATUS.on;\n      currentGameStatus = GAME_STATUS.on;\n      noOfVisibleSquares = currentLevel;\n      calculateWinningId();\n      calculateWinningColor();\n\n      updateDisplay();\n    };\n\n    const toggleLevel = () => {\n      return currentLevel === LEVEL.hard ? LEVEL.easy : LEVEL.hard;\n    };\n\n    const processLevelBtns = function fn() {\n      if (!this.classList.contains(\"selected\")) {\n        levelElems.forEach(elem => {\n          elem.classList.toggle(\"selected\");\n        });\n        currentLevel = toggleLevel();\n        totalScore = currentLevel * ROUNDS_LIMIT;\n        currentScore = totalScore;\n        currentRound = ROUNDS_LIMIT;\n        reset();\n      }\n    };\n\n    const addOtherlisteners = () => {\n      resetElem.addEventListener(\"click\", () => {\n        if (resetElem.textContent === \"new colors\") {\n          currentScore -= 2;\n        }\n        reset();\n      });\n\n      levelElems.forEach(elem => {\n        elem.addEventListener(\"click\", processLevelBtns);\n      });\n\n      helpBtn.addEventListener(\"click\", () => {\n        console.log(this);\n        helpBtn.textContent =\n          helpBtn.textContent === \"hide help\" ? \"help\" : \"hide help\";\n        rgbimgElem.classList.toggle(\"hidden\");\n      });\n    };\n\n    const init = () => {\n      scoreInfoElem.textContent = `${currentScore} / ${totalScore}`;\n      reset();\n      addListenersToSquares();\n      addOtherlisteners();\n    };\n\n    return { init };\n  })();\n\n  colorGame.init();\n});\n","/** @format */\n\n// const exports = (module.exports = {});\n\nexports.getRandomInt = (minInclusive, maxExclusive) => {\n  if (!(typeof minInclusive === \"number\"))\n    throw Error(\"invalid argument: minInclusive must be a number\");\n  if (!(typeof maxExclusive === \"number\"))\n    throw Error(\"invalid argument: maxExclusive must be a number\");\n\n  const minInt = Math.ceil(minInclusive);\n  const maxInt = Math.floor(maxExclusive);\n  return Math.floor(Math.random() * (maxInt - minInt)) + minInt;\n};\n\nexports.getRandomRgbColor = () => {\n  const rgbLowerBound = 0;\n  const rgbUpperBound = 256;\n  const red = exports.getRandomInt(rgbLowerBound, rgbUpperBound);\n  const green = exports.getRandomInt(rgbLowerBound, rgbUpperBound);\n  const blue = exports.getRandomInt(rgbLowerBound, rgbUpperBound);\n  const color = `rgb(${red}, ${green}, ${blue})`;\n  return color;\n};\n\n/**\n * @param {HTMLElement} elem\n * @param {string} attribute\n */\nexports.addDataAttribute = (elem, attribute, val) => {\n  if (!(typeof attribute === \"string\"))\n    throw Error(\"invalid argument: attribute must be a String\");\n  const element = elem;\n  element.dataset[attribute] = val;\n};\n\n/* WAY 2\n\nconst getRandomInt = sentence => {\n  some code...\n};\nmodule.exports = getRandomInt;    << function assigned\n    and then:\nconst toLowerCase = require('./toLowerCase.js');\ntoLowerCase('Hello World!');   << module.exports is a function, so no need to call it on an object\n\n */\n\n/* WAY 3\n\nmodule.exports = {\n    getRandomInt: (minInclusive, maxExclusive) => {\n      const minInt = Math.ceil(minInclusive);\n      const maxInt = Math.floor(maxExclusive);\n      return Math.floor(Math.random() * (maxInt - minInt)) + minInt;\n    },\n  \n    getRandomRgbColor: () => {\n      const rgbLowerBound = 0;\n      const rgbUpperBound = 256;\n      const red = exports.getRandomInt(rgbLowerBound, rgbUpperBound);\n      const green = exports.getRandomInt(rgbLowerBound, rgbUpperBound);\n      const blue = exports.getRandomInt(rgbLowerBound, rgbUpperBound);\n      const color = `rgb(${red}, ${green}, ${blue})`;\n      return color;\n    },\n  };\n   */\n"],"sourceRoot":""}